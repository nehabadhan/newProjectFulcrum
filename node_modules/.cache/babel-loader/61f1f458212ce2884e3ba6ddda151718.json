{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NehaBadhan\\\\Desktop\\\\updatedFulcrum\\\\src\\\\Components\\\\Entityapi.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\n\nclass Entity extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/entity/getEntity/4').then(response => response.json()).then(data => this.setState({\n      users: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"card-title\",\n      style: {\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Customer Demography\")), React.createElement(Link, {\n      className: \"alignment\",\n      to: {\n        pathname: \"/AddWorkbench\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Go to Workbench  \"), React.createElement(\"table\", {\n      class: \"table table-bordered table-secondary\",\n      id: \"tableBorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      class: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Database Name\"), React.createElement(\"th\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Entity Grain:\"), React.createElement(\"th\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Frequency:\"))), error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, error.message) : null, !isLoading ? users.map(user => {\n      const databaseName = user.databaseName,\n            entityType = user.entityType,\n            entityGrain = user.entityGrain,\n            refreshFrequency = user.refreshFrequency;\n      return React.createElement(\"tr\", {\n        class: \"round3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" \", entityType.entityTypeName, \" \"), React.createElement(\"img\", {\n        class: \"roundedImageList\",\n        src: entityType.entityimagePath,\n        alt: \"Smiley face\",\n        height: \"80\",\n        width: \"80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, entityGrain, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, refreshFrequency));\n    }) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading...\")), error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, error.message) : null, !isLoading ? users.map(user => {\n      const dateUpdateTimeStamp = user.dateUpdateTimeStamp,\n            dateLoadTimeStamp = user.dateLoadTimeStamp,\n            entityLongDescription = user.entityLongDescription;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table table-bordered table-secondary\",\n        id: \"tableBorder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        class: \"first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Dates\"), React.createElement(\"th\", {\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Rates\"), React.createElement(\"th\", {\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Records\"), React.createElement(\"th\", {\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Cache\"))), React.createElement(\"tr\", {\n        class: \"round3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" \", dateLoadTimeStamp, \" \"), dateUpdateTimeStamp), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, entityLongDescription))));\n    }) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Loading...\")))));\n  }\n\n}\n\nexport default Entity;","map":{"version":3,"sources":["C:/Users/NehaBadhan/Desktop/updatedFulcrum/src/Components/Entityapi.js"],"names":["React","Component","ReactDOM","Link","Entity","state","isLoading","users","error","componentDidMount","fetch","then","response","json","data","setState","catch","render","fontSize","pathname","color","message","map","user","databaseName","entityType","entityGrain","refreshFrequency","entityTypeName","entityimagePath","dateUpdateTimeStamp","dateLoadTimeStamp","entityLongDescription"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Entity extends React.Component {\r\nstate = {\r\nisLoading: true,\r\nusers: [],\r\nerror: null\r\n};\r\ncomponentDidMount() {\r\n  fetch('http://localhost:8080/entity/getEntity/4')\r\n  .then(response => response.json())\r\n  .then(data =>\r\n   this.setState({\r\n   users: data,\r\n   isLoading: false,\r\n})\r\n  ).catch(error => this.setState({ error, isLoading: false }));\r\n}\r\n\r\nrender() {\r\nconst { isLoading, users, error } = this.state;\r\n\r\nreturn (\r\n<React.Fragment>\r\n          <div class=\"container\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <p class=\"card-title\" style={{ fontSize: \"14px\" }}>\r\n                  <b>Customer Demography</b>\r\n                </p>\r\n                <Link className=\"alignment\" to={{ pathname: \"/AddWorkbench\" }}> Go to Workbench  </Link>\r\n<table class=\"table table-bordered table-secondary\" id=\"tableBorder\">\r\n<thead class=\"first\">\r\n   <tr>\r\n      <th style={{ color: \"black\" }}>Database Name</th>\r\n      <th style={{ color: \"black\" }}>Entity Grain:</th>\r\n      <th style={{ color: \"black\" }}>Frequency:</th>\r\n   </tr>\r\n</thead>\r\n   {error ? <p>{error.message}</p> : null}\r\n   {!isLoading ? (\r\n   users.map(user => {\r\n   const { databaseName,entityType,entityGrain,refreshFrequency } = user; \r\n   return (\r\n         <tr class=\"round3\">\r\n            <td><p> {entityType.entityTypeName} </p>\r\n            <img  class=\"roundedImageList\" src={entityType.entityimagePath} alt=\"Smiley face\" height=\"80\" width=\"80\"/>\r\n            </td>\r\n            <td>{entityGrain} </td>\r\n            <td>{refreshFrequency}</td>\r\n         </tr>\r\n        );\r\n       })\r\n      ) : (<h3>Loading...</h3>)} \r\n   </table> \r\n\r\n   {error ? <p>{error.message}</p>: null}\r\n   {!isLoading ? (\r\n   users.map(user => {\r\n   const { dateUpdateTimeStamp,dateLoadTimeStamp,entityLongDescription } = user; \r\n   return (\r\n   <div>\r\n   <table class=\"table table-bordered table-secondary\" id=\"tableBorder\">\r\n   <thead class=\"first\">\r\n   <tr>\r\n      <th style={{ color: \"black\" }}>Dates</th>\r\n      <th style={{ color: \"black\" }}>Rates</th>\r\n      <th style={{ color: \"black\" }}>Records</th>\r\n      <th style={{ color: \"black\" }}>Cache</th>\r\n   </tr>\r\n   </thead>\r\n         <tr class=\"round3\">\r\n            <td><p> {dateLoadTimeStamp} </p>\r\n               {dateUpdateTimeStamp}\r\n            </td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{entityLongDescription}</td>\r\n            </tr>\r\n   </table> \r\n</div>\r\n     );\r\n   })\r\n   ) : ( <h3>Loading...</h3>)} \r\n         \r\n</div>\r\n</div>\r\n</div>\r\n\r\n</React.Fragment>\r\n);\r\n}\r\n}\r\n\r\nexport default Entity;"]},"metadata":{},"sourceType":"module"}