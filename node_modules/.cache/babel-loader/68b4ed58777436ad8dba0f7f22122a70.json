{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NehaBadhan\\\\Desktop\\\\updatedFulcrum\\\\src\\\\Components\\\\Featuredata.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Feature extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      features: [],\n      error: null,\n      entityID: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/feature/getFeatureByEntityID/' + this.entityID).then(response => response.json()).then(data => this.setState({\n      features: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    var customerColumnList = this.props;\n    this.entityID = customerColumnList.location.aboutProps.id.entityID;\n    console.log(this.entityID);\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          features = _this$state.features,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, error.message) : null, !isLoading ? React.createElement(\"table\", {\n      className: \"table table table-bordered table-striped\",\n      id: \"tableBorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"tableTransform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, features.map(feature => React.createElement(\"th\", {\n      key: feature.featureName,\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, feature.featureName)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, [\"featureTechDescription\", \"sourceSystem\", \"sampleValues\"].map(key => React.createElement(\"tr\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, features.map(feature => React.createElement(\"td\", {\n      key: feature.featureName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, feature[key])))))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Loading...\")))));\n  }\n\n}\n\nexport default Feature;","map":{"version":3,"sources":["C:/Users/NehaBadhan/Desktop/updatedFulcrum/src/Components/Featuredata.js"],"names":["React","Component","Link","Feature","state","isLoading","features","error","entityID","componentDidMount","fetch","then","response","json","data","setState","catch","render","customerColumnList","props","location","aboutProps","id","console","log","message","map","feature","featureName","color","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nclass Feature extends React.Component {state = {\r\n  isLoading: true,\r\n  features: [],\r\n  error: null,\r\n  entityID: null\r\n  };\r\n  componentDidMount() {\r\n    fetch('http://localhost:8080/feature/getFeatureByEntityID/'+this.entityID)\r\n    .then(response => response.json())\r\n    .then(data =>\r\n     this.setState({\r\n     features: data,\r\n     isLoading: false,\r\n  })\r\n    ).catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  \r\n  render() {\r\n    var customerColumnList = this.props;\r\n\t  this.entityID = customerColumnList.location.aboutProps.id.entityID;\r\n\t  console.log(this.entityID);\r\n  const { isLoading, features, error } = this.state;\r\n\r\n  \r\n  return (\r\n  <React.Fragment>\r\n        \r\n            <div class=\"container\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n  \r\n  {error ? <p>{error.message}</p> : null}\r\n     {!isLoading ? (\r\n       \r\n  <table className=\"table table table-bordered table-striped\" id=\"tableBorder\">\r\n          <thead className=\"tableTransform\">\r\n            <tr>\r\n              {features.map(feature => (\r\n                <th key={feature.featureName} style={{ color: \"white\" }}>\r\n                  {feature.featureName}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {[\"featureTechDescription\", \"sourceSystem\", \"sampleValues\"].map(\r\n              key => (\r\n                <tr key={key}>\r\n                  {features.map(feature => (\r\n                    <td key={feature.featureName}>{feature[key]}</td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        ) : (<h3>Loading...</h3>)    \r\n     }\r\n        \r\n  </div>\r\n  </div>\r\n  </div>\r\n\r\n  </React.Fragment>\r\n     );\r\n  }\r\n  }\r\nexport default Feature;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}